/*! normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0;
}

/**
 * Add the correct display in IE 9-.
 */
article,
aside,
footer,
header,
nav,
section {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in IE.
 */
figcaption,
figure,
main {
  /* 1 */
  display: block;
}

/**
 * Add the correct margin in IE 8.
 */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */
}

/**
 * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */
}

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit;
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic;
}

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000;
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
audio,
video {
  display: inline-block;
}

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none;
}

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * 1. Add the correct display in IE 9-.
 * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 */
details,
menu {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Scripting
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
canvas {
  display: inline-block;
}

/**
 * Add the correct display in IE.
 */
template {
  display: none;
}

/* Hidden
   ========================================================================== */
/**
 * Add the correct display in IE 10-.
 */
[hidden] {
  display: none;
}

* {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  text-decoration: none;
  list-style-type: none;
  margin: 0;
  padding: 0;
}

:root {
  font-size: 1em;
}

@media (max-width: 57.5em) {
  :root {
    font-size: .9em;
  }
}

body {
  font-size: 100%;
  font-family: 'Libre Baskerville', serif;
  color: #333;
}

div.maxwrap, section.maxwrap {
  max-width: 1200px;
  margin: 0 auto;
}

p {
  line-height: 1.4;
}

section {
  padding: 6em 1.5em;
}

div.section-headline__wrapper {
  margin-bottom: .9em;
  font-size: 3.5em;
  text-align: center;
  color: #fff;
}

.testimonials div.section-headline__wrapper {
  color: #000;
}

.testimonials div.section-headline__wrapper h2.section-headline::before, .testimonials div.section-headline__wrapper h2.section-headline::after {
  background-color: #000;
}

h2.section-headline {
  font-family: 'Tangerine', sans-serif;
  text-align: center;
  position: relative;
  display: inline-block;
}

h2.section-headline::before, h2.section-headline::after {
  position: absolute;
  content: "";
  width: .3em;
  height: .02em;
  background-color: #fff;
}

h2.section-headline::before {
  left: -.6em;
  top: 50%;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
}

h2.section-headline::after {
  right: -.6em;
  top: 50%;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
}

.btn-standard {
  position: absolute;
  bottom: 1.8em;
  left: 50%;
  -webkit-transform: translateX(-50%);
          transform: translateX(-50%);
  color: #333;
  background-color: rgba(248, 149, 108, 0.8);
  width: 60%;
  display: inline-block;
  padding: .6em 1.2em;
  text-align: center;
}

.btn-standard::before, .btn-standard::after {
  content: "";
  -webkit-transition: all 250ms;
  transition: all 250ms;
  position: absolute;
  border-color: transparent;
  border-style: solid;
  border-width: 0;
  height: 1.0909em;
  /* was 24px */
  width: 1.0909em;
  /* was 24px */
}

.btn-standard::before {
  border-top-width: .090em;
  /* was 2px */
  border-color: #c47135;
  top: -.227em;
  /* was 5px */
  left: 0;
}

.btn-standard::after {
  border-bottom-width: .090em;
  /* was 2px */
  border-color: #c47135;
  bottom: -.227em;
  /* was 5px */
  right: 0px;
}

.btn-standard:hover::before, .btn-standard:hover::after {
  width: 100%;
}

.btn-services {
  position: relative;
  color: #fff;
  background-color: rgba(248, 149, 108, 0.8);
  width: 60%;
  display: inline-block;
  padding: .6em 1.2em;
  text-align: center;
  margin-top: auto;
  -ms-flex-item-align: center;
      align-self: center;
}

.btn-services::before, .btn-services::after {
  content: "";
  -webkit-transition: all 250ms;
  transition: all 250ms;
  position: absolute;
  border-color: transparent;
  border-style: solid;
  border-width: 0;
  height: 1.0909em;
  /* was 24px */
  width: 1.0909em;
  /* was 24px */
}

.btn-services::before {
  border-top-width: .090em;
  /* was 2px */
  border-color: #c47135;
  top: -.227em;
  /* was 5px */
  left: 0;
}

.btn-services::after {
  border-bottom-width: .090em;
  /* was 2px */
  border-color: #c47135;
  bottom: -.227em;
  /* was 5px */
  right: 0px;
}

.btn-services:hover::before, .btn-services:hover::after {
  width: 100%;
}

.site-header {
  padding: 0 1.5em;
  background-color: #fff;
  position: fixed;
  z-index: 101;
  width: 100%;
  -webkit-transition: all 400ms ease-out;
  transition: all 400ms ease-out;
}

@media (min-width: 75em) {
  .site-header {
    padding: 0 calc(50% - 600px);
  }
}

.site-header--stickee {
  background-color: rgba(255, 255, 255, 0.7);
  -webkit-box-shadow: 0 2px 2px rgba(0, 0, 0, 0.6);
          box-shadow: 0 2px 2px rgba(0, 0, 0, 0.6);
}

.site-header__logo {
  position: absolute;
  padding: 1.6em 2em;
  background-color: #000;
  -webkit-transform-origin: center top;
          transform-origin: center top;
  -webkit-transition: -webkit-transform 400ms ease-out;
  transition: -webkit-transform 400ms ease-out;
  transition: transform 400ms ease-out;
  transition: transform 400ms ease-out, -webkit-transform 400ms ease-out;
}

@media (max-width: 48.75em) {
  .site-header__logo {
    left: 50%;
    -webkit-transform: translateX(-50%) scale(0.9);
            transform: translateX(-50%) scale(0.9);
  }
}

@media (min-width: 48.75em) {
  .site-header--stickee .site-header__logo {
    -webkit-transform: scale(0.58);
            transform: scale(0.58);
  }
}

.site-header__heading {
  color: #fab89d;
  font-size: 2.2rem;
  margin-top: -.1em;
  display: block;
  line-height: .9;
}

.site-header__heading--amp {
  font-size: 1.5rem;
  line-height: 1.3;
  vertical-align: middle;
}

.site-header__heading--emph {
  color: #fff;
  display: block;
  margin-bottom: -.05em;
}

@media (max-width: 48.75em) {
  .site-header__menu-icon {
    position: absolute;
    width: 20px;
    height: 19px;
    top: 1em;
    right: 1em;
    cursor: pointer;
  }
  .site-header__menu-icon::before {
    content: "";
    width: 20px;
    height: 2px;
    background-color: #000;
    display: inline-block;
    position: absolute;
    top: 0;
  }
  .site-header__menu-icon__middle {
    width: 20px;
    height: 2px;
    background-color: #000;
    position: absolute;
    top: 50%;
    -webkit-transform: translateY(-50%);
            transform: translateY(-50%);
  }
  .site-header__menu-icon::after {
    content: "";
    width: 20px;
    height: 2px;
    background-color: #000;
    position: absolute;
    display: inline-block;
    bottom: 0;
  }
}

.site-header .nav-wrap {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  float: right;
}

@media (max-width: 48.75em) {
  .site-header .nav-wrap {
    opacity: 0;
    visibility: hidden;
  }
}

.site-header .nav-wrap.showIt {
  opacity: 1;
  visibility: visible;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  padding-top: 100px;
  float: none;
}

.site-header__primary-nav {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  padding: 0 1em;
}

.site-header__primary-nav li {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.site-header__primary-nav li a:link, .site-header__primary-nav li a:visited {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  padding: 1.2em 1.6em;
  width: 100%;
  font-family: Raleway, sans-serif;
  text-transform: uppercase;
  font-size: .9rem;
  color: #333;
  -webkit-transition: all 300ms ease-out;
  transition: all 300ms ease-out;
}

.site-header__primary-nav li a:link:hover, .site-header__primary-nav li a:visited:hover {
  background-color: #fab89d;
  color: #fff;
}

.site-header__social {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: end;
      -ms-flex-pack: end;
          justify-content: flex-end;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.site-header__social a:not(:first-of-type) {
  margin-left: .5em;
}

.site-header__social img {
  width: 1.375em;
}

.showIt .site-header__social {
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  padding-bottom: 1em;
}

.large-hero {
  height: 95vh;
  background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(250, 184, 157, 0.4)), to(rgba(250, 184, 157, 0.2))), url("../img/hair-salon-hero.jpg");
  background-image: linear-gradient(rgba(250, 184, 157, 0.4), rgba(250, 184, 157, 0.2)), url("../img/hair-salon-hero.jpg");
  background-size: cover;
  background-position: right top;
  position: relative;
  background-attachment: fixed;
  background-repeat: no-repeat;
}

.large-hero__wrap {
  max-width: 80%;
  position: absolute;
  top: 50%;
  left: 30%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
}

.large-hero__main-heading {
  font-family: Tangerine, sans-serif;
  font-weight: 700;
  font-size: 9rem;
  line-height: .8;
  color: #fff;
  margin: 0;
}

.large-hero__sub-heading {
  font-size: 2rem;
  font-weight: 300;
  color: #000;
}

.grid-gallery {
  margin-top: -15em;
  /*why cant negative top margin apply to the grid??*/
}

.grid-gallery__grid {
  position: relative;
  z-index: 100;
  display: grid;
  width: 900px;
  height: 450px;
  margin: 0 auto;
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: 1fr 1fr;
  background-color: #000;
}

.grid-gallery__grid__cell h3 {
  text-transform: uppercase;
  position: absolute;
  top: 30%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
}

.grid-gallery__grid__cell {
  overflow: hidden;
}

.grid-gallery__grid__cell img {
  width: 100%;
  -o-object-fit: cover;
     object-fit: cover;
  opacity: .7;
  -webkit-transition: all 300ms ease-out;
  transition: all 300ms ease-out;
}

.grid-gallery__grid__cell img:hover {
  opacity: 1;
  -webkit-transform: scale(1.15);
          transform: scale(1.15);
}

.grid-gallery__grid--cell__one {
  background-color: #fab89d;
  position: relative;
}

.grid-gallery__grid--cell__three {
  background-color: #000;
  color: #fff;
  position: relative;
}

.grid-gallery__grid--cell__three .btn {
  color: #fff;
}

.grid-gallery__grid--cell__six {
  background-color: #fff;
  position: relative;
}

.grid-gallery__grid--cell__eight {
  background-color: #fab89d;
  position: relative;
}

.services {
  background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.2)), to(rgba(0, 0, 0, 0.1))), url("../img/service-bg.jpg");
  background-image: linear-gradient(rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.1)), url("../img/service-bg.jpg");
  background-size: cover;
  background-attachment: fixed;
  color: #fff;
}

.services__grid {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  grid-gap: 1.2em;
}

.services__salon-services {
  background-color: rgba(0, 0, 0, 0.9);
  padding: 1.6em;
  border-radius: 1em;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
}

.services .fa {
  font-size: 3em;
  margin-bottom: .4em;
}

.services__sub-heading {
  text-transform: uppercase;
  font-weight: 300;
  margin-bottom: .3em;
}

.services__summary {
  font-size: .9em;
  line-height: 1.6;
  margin-bottom: 1.5em;
}

.gallery {
  background-color: #000;
  padding-left: 0;
  padding-right: 0;
}

.gallery__main {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-auto-rows: 270px;
  grid-gap: .7em;
  grid-auto-flow: row dense;
}

.gallery__main figure {
  position: relative;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  overflow: hidden;
  background-color: rgba(255, 255, 255, 0.7);
}

.gallery__main figure.tall {
  grid-row: auto / span 2;
}

.gallery__main figure.wide {
  grid-column: auto / span 2;
}

.gallery__main figure img {
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
  -o-object-fit: cover;
     object-fit: cover;
  width: 100%;
  opacity: .7;
  -webkit-transition: all 300ms ease-out;
  transition: all 300ms ease-out;
}

.gallery__main figure img:hover {
  -webkit-transform: scale(1.15);
          transform: scale(1.15);
  opacity: 1;
}

.gallery__main figure figcaption {
  position: absolute;
  opacity: 0;
  top: 50%;
  left: 50%;
  -webkit-transition: all 300ms ease-out;
  transition: all 300ms ease-out;
}

.gallery__main figure:hover figcaption {
  opacity: 1;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
}

.testimonials {
  background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.1)), to(rgba(0, 0, 0, 0.2))), url("../img/whiteBg.jpg");
  background-image: linear-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.2)), url("../img/whiteBg.jpg");
  background-size: cover;
  background-attachment: fixed;
  background-repeat: no-repeat;
  background-position: center center;
}

.main-container {
  position: relative;
}

.container__slider {
  position: relative;
  overflow: hidden;
  width: 80%;
  left: 10%;
}

.container__slide {
  position: absolute;
  width: 100%;
  top: 50%;
  left: 0;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
  text-align: center;
}

.container__slide.animated {
  -webkit-transition: left .3s ease-in;
  transition: left .3s ease-in;
}

blockquote {
  color: #111;
  font-weight: 300;
  font-style: italic;
  margin-bottom: 1.5em;
  line-height: 1.5;
}

cite {
  font-size: .75em;
  font-weight: 700;
  font-style: normal;
}

/* Nav */
#prev,
#next {
  -webkit-transition: all .3s ease-in;
  transition: all .3s ease-in;
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
  z-index: 99;
  display: inline-block;
  width: 5em;
  height: 5em;
  border-radius: 50%;
  background-position: center center;
  background-repeat: no-repeat;
}

#prev {
  background-image: url("../img/arrow-left-out.svg");
}

#prev:hover {
  background-image: url("../img/arrow-left-over.svg");
}

#next {
  background-image: url("../img/arrow-right-out.svg");
  right: 0;
}

#next:hover {
  background-image: url("../img/arrow-right-over.svg");
}

.appointments {
  background-image: -webkit-gradient(linear, left bottom, left top, from(#a7a6cb), color-stop(52%, #8989ba), to(#8989ba));
  background-image: linear-gradient(to top, #a7a6cb 0%, #8989ba 52%, #8989ba 100%);
}

.contacts {
  background: rgba(248, 149, 108, 0.9);
  color: #fff;
}

h3 {
  margin-bottom: 1em;
}

.contacts li + li {
  margin-top: .2em;
}

div.wrapper {
  -webkit-box-shadow: 0 0 5px 0 rgba(0, 0, 0, 0.7);
          box-shadow: 0 0 5px 0 rgba(0, 0, 0, 0.7);
  padding: 0;
  border-radius: 6px;
  overflow: hidden;
}

@media (min-width: 43.75em) {
  div.wrapper {
    display: grid;
    grid-template-columns: 1fr 3fr;
  }
}

.wrapper > * {
  padding: 3em 1em;
}

.form {
  background-color: rgba(255, 255, 255, 0.8);
}

.field-text input,
.field-text textarea,
.field-text select,
input[type="submit"] {
  width: 100%;
  border-radius: 0 .25em .25em 0;
  padding: .375em .3125em .3125em;
  border: 1px solid #ccc;
  font: inherit;
  color: inherit;
}

.field-text input,
.field-text select {
  height: 2.125em;
}

.field-text input:focus,
.field-text textarea:focus,
.field-text select:focus {
  outline: none;
  -webkit-box-shadow: inset 0 0 0.5em rgba(93, 162, 248, 0.5);
          box-shadow: inset 0 0 0.5em rgba(93, 162, 248, 0.5);
}

/* form element NOT the div with a class for form */
form {
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-gap: 1em;
}

@media (max-width: 31.25em) {
  form {
    grid-template-columns: 1fr;
    /* this would not work if the .full-width class was set to grid-column: 1 / 3 as that would create an implicit 2nd column */
  }
}

form label {
  display: block;
}

.field-prefixed {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.field-prefix {
  -webkit-box-flex: 0;
      -ms-flex: 0 0 2.2em;
          flex: 0 0 2.2em;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  border: 1px solid #ccc;
  border-right: 0;
  border-radius: .25em 0 0 .25em;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  padding: .375em .375em .3125em .375em;
  color: #fff;
}

form p {
  margin: 0;
}

textarea {
  height: 8em;
  resize: none;
}

/* changed from 1 / 3 because otherwise there will ALWAYS be two columns*/
.full-width {
  grid-column: 1 / -1;
}

.full-width:last-of-type {
  justify-self: center;
}

.full-width input[type="submit"] {
  margin-top: 2em;
  padding: .6em 1.2em;
  color: #fff;
  border-radius: 6px;
  border: 0;
  background-image: -webkit-gradient(linear, left bottom, left top, from(rgba(248, 149, 108, 0.9)), to(rgba(246, 131, 84, 0.9)));
  background-image: linear-gradient(to top, rgba(248, 149, 108, 0.9), rgba(246, 131, 84, 0.9));
  -webkit-box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.4);
          box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.4);
}

.full-width input[type="submit"]:hover {
  cursor: pointer;
}

.full-width input[type="submit"]:focus {
  outline: none;
}

.full-width input[type="submit"]:active {
  -webkit-box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.4);
          box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.4);
  outline: none;
  -webkit-transform: translate(1px, 1px);
          transform: translate(1px, 1px);
}

/* make sure breakpoint-to-ems mixin is in var/scss file, not here!*/
#back-to-top {
  font-size: .75em;
  text-decoration: none;
  position: fixed;
  bottom: 3em;
  right: 3em;
  background-color: rgba(255, 255, 255, 0.9);
  color: #313943;
  border: none;
  border-radius: 5px;
  padding: 1em;
  text-transform: uppercase;
  cursor: pointer;
  font-weight: 700;
  -webkit-box-shadow: 0 0 2em 0 rgba(0, 0, 0, 0.25);
          box-shadow: 0 0 2em 0 rgba(0, 0, 0, 0.25);
  -webkit-transition: all .3s ease-in-out;
  transition: all .3s ease-in-out;
  display: block;
  opacity: 0;
  visibility: hidden;
}

#back-to-top:hover {
  padding: 1em 2em;
}

#back-to-top.visible {
  opacity: 1;
  visibility: visible;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
